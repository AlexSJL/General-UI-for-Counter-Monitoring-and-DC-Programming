# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'QMS_mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from port_ctrl1 import Rigol_DCPort
from CAENDesktopHighVoltagePowerSupply1 import CAENDesktopHighVoltagePowerSupply, OneCAENChannel
import pyvisa as visa
import time
import numpy as np
import serial
import serial.tools.list_ports 
from matplotlib import pyplot as plt
from random import randint
from First_Stability_Diagram import Stability_Diagram as SD

import sys
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.figure import Figure
from PyQt5.QtGui import QIcon, QDoubleValidator
from PyQt5.QtCore import Qt, QTimer
from PyQt5.QtWidgets import *
from PyQt5 import QtCore, QtGui, QtWidgets
import pyqtgraph as pg


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(2600, 1200)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        
        # label: Communication Settings
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 20, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(16)
        self.label.setFont(font)
        self.label.setObjectName("label")
        
        # label: Box for Communication Setting
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(10, 50, 221, 141))
        self.label_2.setFrameShape(QtWidgets.QFrame.Box)
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        self.label_2.lower()
        
        # label: Port
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(30, 70, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        
        # label: Baud Rate
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(30, 110, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.label_4.setFont(font)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        
        # Combo Box: Port Selection
        self.sendcom = QtWidgets.QComboBox(self.centralwidget)
        self.sendcom.setGeometry(QtCore.QRect(126, 70, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.sendcom.setFont(font)
        self.sendcom.setObjectName("sendcom")
        self.sendcom.addItem("")
        self.sendcom.setItemText(0, "")
        
        # Combo Box: Baud Rate Selection
        self.sendbot = QtWidgets.QComboBox(self.centralwidget)
        self.sendbot.setGeometry(QtCore.QRect(126, 110, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.sendbot.setFont(font)
        self.sendbot.setObjectName("sendbot")
        self.sendbot.addItem("")
        self.sendbot.addItem("")
        
        # Button: Connect
        self.sendbutton = QtWidgets.QPushButton(self.centralwidget)
        self.sendbutton.setGeometry(QtCore.QRect(126, 150, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.sendbutton.setFont(font)
        self.sendbutton.setObjectName("sendbutton")
        
        # Label: Parameter Settings
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(240, 20, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(16)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        
        # Label: Box for Parameter Settings
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(240, 50, 581, 141))
        self.label_6.setFrameShape(QtWidgets.QFrame.Box)
        self.label_6.setText("")
        self.label_6.setObjectName("label_6")
        self.label_6.lower()
        
        # label: RF Frequency
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(250, 70, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        
        # Text Input: RF Frequency
        validator = QDoubleValidator()
        validator.setNotation(QDoubleValidator.StandardNotation)
        validator.setDecimals(12)
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(360, 70, 113, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.lineEdit.setFont(font)
        self.lineEdit.setText("800")
        self.lineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit.setValidator(validator)
        
        # label: kHz
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(480, 70, 31, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        
        # label: Inscribed Radius
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(550, 70, 141, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.label_9.setFont(font)
        self.label_9.setObjectName("label_9")
        
        # label: mm
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(800, 70, 21, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.label_10.setFont(font)
        self.label_10.setObjectName("label_10")
        
        # Text input: Inscribed Radius
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(690, 70, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setFrame(True)
        self.lineEdit_2.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_2.setDragEnabled(False)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_2.setValidator(validator)
        
        # label: Ion Mass
        self.label_11 = QtWidgets.QLabel(self.centralwidget)
        self.label_11.setGeometry(QtCore.QRect(250, 130, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.label_11.setFont(font)
        self.label_11.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_11.setObjectName("label_11")
        
        # Text Input: Ion Mass
        self.lineEdit_3 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_3.setGeometry(QtCore.QRect(360, 130, 113, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.lineEdit_3.setText("229")
        self.lineEdit_3.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_3.setFont(font)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_3.setValidator(validator)
        
        # label: AU
        self.label_12 = QtWidgets.QLabel(self.centralwidget)
        self.label_12.setGeometry(QtCore.QRect(480, 130, 31, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.label_12.setFont(font)
        self.label_12.setObjectName("label_12")
        
        # label: Ion Charges
        self.label_13 = QtWidgets.QLabel(self.centralwidget)
        self.label_13.setGeometry(QtCore.QRect(550, 130, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.label_13.setFont(font)
        self.label_13.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_13.setObjectName("label_13")
        
        # Text Input: Ion Charges
        self.lineEdit_4 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_4.setGeometry(QtCore.QRect(690, 130, 101, 31))
        self.lineEdit_4.setText("1")
        self.lineEdit_4.setFont(font)
        self.lineEdit_4.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.lineEdit_4.setValidator(validator)
        
        # label: e
        self.label_14 = QtWidgets.QLabel(self.centralwidget)
        self.label_14.setGeometry(QtCore.QRect(800, 130, 21, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.label_14.setFont(font)
        self.label_14.setObjectName("label_14")
        
        # label: Data Output Control
        self.label_15 = QtWidgets.QLabel(self.centralwidget)
        self.label_15.setGeometry(QtCore.QRect(1250, 20, 151, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(16)
        self.label_15.setFont(font)
        self.label_15.setObjectName("label_15")
        
        # label: Box for Data Output Control
        self.label_16 = QtWidgets.QLabel(self.centralwidget)
        self.label_16.setGeometry(QtCore.QRect(1250, 50, 161, 141))
        self.label_16.setFrameShape(QtWidgets.QFrame.Box)
        self.label_16.setText("")
        self.label_16.setObjectName("label_16")
        self.label_16.lower()
        
        # Button: Save Data
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(1280, 100, 101, 41))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        
        # label: Voltage Output Control
        self.label_17 = QtWidgets.QLabel(self.centralwidget)
        self.label_17.setGeometry(QtCore.QRect(830, 20, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(16)
        self.label_17.setFont(font)
        self.label_17.setObjectName("label_17")
        
        # label: Box for Voltage Output Control
        self.label_18 = QtWidgets.QLabel(self.centralwidget)
        self.label_18.setGeometry(QtCore.QRect(830, 50, 211, 141))
        self.label_18.setFrameShape(QtWidgets.QFrame.Box)
        self.label_18.setText("")
        self.label_18.setObjectName("label_18")
        self.label_18.lower()
        
        # Combo Box: Positive Channel Selection 
        self.comboBox_3 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_3.setGeometry(QtCore.QRect(950, 70, 67, 22))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.comboBox_3.setFont(font)
        self.comboBox_3.setToolTip("")
        self.comboBox_3.setObjectName("comboBox_3")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        
        # Combo Box: Negative Channel Selection
        self.comboBox_4 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_4.setGeometry(QtCore.QRect(950, 110, 67, 22))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.comboBox_4.setFont(font)
        self.comboBox_4.setObjectName("comboBox_4")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        
        # Combo Box: RF Channel Selection
        self.comboBox_5 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_5.setGeometry(QtCore.QRect(950, 150, 67, 22))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.comboBox_5.setFont(font)
        self.comboBox_5.setObjectName("comboBox_5")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        
        # label: Positive DC
        self.label_19 = QtWidgets.QLabel(self.centralwidget)
        self.label_19.setGeometry(QtCore.QRect(840, 70, 101, 22))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.label_19.setFont(font)
        self.label_19.setObjectName("label_19")
        
        # label: Negative DC
        self.label_20 = QtWidgets.QLabel(self.centralwidget)
        self.label_20.setGeometry(QtCore.QRect(840, 110, 101, 22))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.label_20.setFont(font)
        self.label_20.setObjectName("label_20")
        
        # label: RF Channel
        self.label_21 = QtWidgets.QLabel(self.centralwidget)
        self.label_21.setGeometry(QtCore.QRect(840, 150, 101, 22))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.label_21.setFont(font)
        self.label_21.setObjectName("label_21")
        
        # label: Configuration Control
        self.label_22 = QtWidgets.QLabel(self.centralwidget)
        self.label_22.setGeometry(QtCore.QRect(1050, 20, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(16)
        self.label_22.setFont(font)
        self.label_22.setObjectName("label_22")
        
        # label: Box for Configuration Control
        self.label_23 = QtWidgets.QLabel(self.centralwidget)
        self.label_23.setGeometry(QtCore.QRect(1050, 50, 191, 141))
        self.label_23.setFrameShape(QtWidgets.QFrame.Box)
        self.label_23.setObjectName("label_23")
        self.label_23.lower()
        
        # Push Button: Play Button
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(1100, 70, 80, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setObjectName("pushButton_3")
        
        # Push Button: Clear Button
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(1100, 130, 80, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setObjectName("pushButton_4")

        # Scanning Features

        # label: Box for Scanning Features
        self.label_37 = QtWidgets.QLabel(self.centralwidget)
        self.label_37.setGeometry(QtCore.QRect(1420, 50, 1170, 141))
        self.label_37.setFrameShape(QtWidgets.QFrame.Box)
        self.label_37.setObjectName("label_37")
        self.label_37.lower()

        # label: Scanning Features
        self.label_38 = QtWidgets.QLabel(self.centralwidget)
        self.label_38.setGeometry(QtCore.QRect(1420, 20, 151, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(16)
        self.label_38.setFont(font)
        self.label_38.setObjectName("label_22")

        # Input 1:  RF starting amplitude, text input window
        self.Aminputdata = QtWidgets.QLineEdit(self.centralwidget)
        self.Aminputdata.setGeometry(QtCore.QRect(1610, 70, 200, 22))   # 950, 70, 67, 22
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Aminputdata.setPlaceholderText("0 - 6 V")
        self.Aminputdata.setFont(font)
        self.Aminputdata.setObjectName("Aminputdata")
        self.Aminputdata.setReadOnly(True)
        reg1 = QtCore.QRegExp('[0-5]?\.\d{4}|6?')
        validator1 = QtGui.QRegExpValidator()
        validator1.setRegExp(reg1)
        self.Aminputdata.setValidator(validator1)
        
        # Input 1 Label
        self.Aminputlabel = QtWidgets.QLabel(self.centralwidget)
        self.Aminputlabel.setGeometry(QtCore.QRect(1430, 70, 170, 22))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Aminputlabel.setFont(font)
        self.Aminputlabel.setAlignment(QtCore.Qt.AlignCenter)
        self.Aminputlabel.setObjectName("Aminputlabel")
        
        # Input 2: RF ending amplitude, text input window
        self.AMinputdata = QtWidgets.QLineEdit(self.centralwidget)
        self.AMinputdata.setGeometry(QtCore.QRect(1990, 70, 200, 22)) 
        font = QtGui.QFont()
        font.setPointSize(12)
        self.AMinputdata.setPlaceholderText("0 - 6 V")
        self.AMinputdata.setFont(font)
        self.AMinputdata.setObjectName("AMinputdata")
        self.AMinputdata.setReadOnly(True)
        self.AMinputdata.setValidator(validator1)
        
        # Input 2 Label
        self.AMinputlabel = QtWidgets.QLabel(self.centralwidget)
        self.AMinputlabel.setGeometry(QtCore.QRect(1810, 70, 170, 22)) 
        font = QtGui.QFont()
        font.setPointSize(12)
        self.AMinputlabel.setFont(font)
        self.AMinputlabel.setAlignment(QtCore.Qt.AlignCenter)
        self.AMinputlabel.setObjectName("AMinputlabel")
        
        # Input 3: DC lowest Volt, text input window
        self.Qminputdata = QtWidgets.QLineEdit(self.centralwidget)
        self.Qminputdata.setGeometry(QtCore.QRect(1610, 110, 200, 22)) #950, 110, 67, 22
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Qminputdata.setPlaceholderText("0 - 3000 V")
        self.Qminputdata.setFont(font)
        self.Qminputdata.setObjectName("Qminputdata")
        self.Qminputdata.setReadOnly(True)
        reg2 = QtCore.QRegExp('\d?(\.\d{2})|[1-9]\d(\.\d{2})|[1-9]\d{2}(\.\d{2})|[1-2]\d{3}(\.\d{2})|3000?')
        validator2 = QtGui.QRegExpValidator()
        validator2.setRegExp(reg2)
        self.Qminputdata.setValidator(validator2)
        
        # Input 3 Label
        self.Qminputlabel = QtWidgets.QLabel(self.centralwidget)
        self.Qminputlabel.setGeometry(QtCore.QRect(1430, 110, 170, 22))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Qminputlabel.setFont(font)
        self.Qminputlabel.setAlignment(QtCore.Qt.AlignCenter)
        self.Qminputlabel.setObjectName("Qminputlabel")
        
        # Input 4: DC greatest Volt, text input window
        self.QMinputdata = QtWidgets.QLineEdit(self.centralwidget)
        self.QMinputdata.setGeometry(QtCore.QRect(1990, 110, 200, 22))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.QMinputdata.setPlaceholderText("0 - 3000 V")
        self.QMinputdata.setFont(font)
        self.QMinputdata.setObjectName("QMinputdata")
        self.QMinputdata.setReadOnly(True)
        self.QMinputdata.setValidator(validator2)
        
        # Input 4 Label
        self.QMinputlabel = QtWidgets.QLabel(self.centralwidget)
        self.QMinputlabel.setGeometry(QtCore.QRect(1810, 110, 170, 22))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.QMinputlabel.setFont(font)
        self.QMinputlabel.setAlignment(QtCore.Qt.AlignCenter)
        self.QMinputlabel.setObjectName("QMinputlabel")
        
        # Input 5: Hstep
        self.Hstep = QtWidgets.QLineEdit(self.centralwidget)
        self.Hstep.setGeometry(QtCore.QRect(1610, 150, 200, 22))# 950, 150, 67, 22
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Hstep.setPlaceholderText("sep by ','")
        self.Hstep.setFont(font)
        self.Hstep.setObjectName("Hstep")
        self.Hstep.setReadOnly(True)
        self.Hstep.setValidator(validator2)
        reg4 = QtCore.QRegExp("^(((0(\.\d{1,2})?)|([1-9](\.\d{0,2})?)|([1-9]\d(\.\d{0,2})?)|([1-9]\d\d(\.\d{0,2})?)|([1-2]\d\d\d(\.\d{0,2})?)|(3000)))(,\s*((0(\.\d{1,2})?)|([1-9](\.\d{0,2})?)|([1-9]\d(\.\d{0,2})?)|([1-9]\d\d(\.\d{0,2})?)|([1-2]\d\d\d(\.\d{0,2})?)|(3000)))*$")
        validator4 = QtGui.QRegExpValidator()
        validator4.setRegExp(reg4)
        self.Hstep.setValidator(validator4)
        
        # Input 5 Hstep Label
        self.Hsteplabel = QtWidgets.QLabel(self.centralwidget)
        self.Hsteplabel.setGeometry(QtCore.QRect(1430, 150, 170, 22))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Hsteplabel.setFont(font)
        self.Hsteplabel.setAlignment(QtCore.Qt.AlignCenter)
        self.Hsteplabel.setObjectName("Hsteplabel")
        
        # Input 6: Astep
        self.Astep = QtWidgets.QLineEdit(self.centralwidget)
        self.Astep.setGeometry(QtCore.QRect(1990, 150, 200, 22))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Astep.setPlaceholderText("sep by ','")
        self.Astep.setFont(font)
        self.Astep.setObjectName("Astep")
        self.Astep.setReadOnly(True)
        reg3 = QtCore.QRegExp("^(((0(\.\d{1,4})?)|([1-5](\.\d{0,4})?))|(6))(,\s*((0(\.\d{1,4})?)|([1-5](\.\d{0,4})?))|(6))*$")
        validator3 = QtGui.QRegExpValidator()
        validator3.setRegExp(reg3)
        self.Astep.setValidator(validator3)
        
        # Input 6 Astep Label
        self.Asteplabel = QtWidgets.QLabel(self.centralwidget)
        self.Asteplabel.setGeometry(QtCore.QRect(1810, 150, 170, 22))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Asteplabel.setFont(font)
        self.Asteplabel.setAlignment(QtCore.Qt.AlignCenter)
        self.Asteplabel.setObjectName("Asteplabel")

        # Input 7: Number of Sampling Points
        self.Sample = QtWidgets.QLineEdit(self.centralwidget)
        self.Sample.setGeometry(QtCore.QRect(2380, 70, 200, 22)) #1570, 300, 190, 50
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Sample.setFont(font)
        self.Sample.setObjectName("Sample")
        self.Sample.setReadOnly(True)
        reg5 = QtCore.QRegExp("^[1-9]\d*$")
        validator5 = QtGui.QRegExpValidator()
        validator5.setRegExp(reg5)
        self.Sample.setValidator(validator5)
        
        # Input 7 Label
        self.Samplelabel = QtWidgets.QLabel(self.centralwidget)
        self.Samplelabel.setGeometry(QtCore.QRect(2200, 70, 170, 22))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Samplelabel.setFont(font)
        self.Samplelabel.setAlignment(QtCore.Qt.AlignCenter)
        self.Samplelabel.setObjectName("Samplelabel")
        
        # Input 8: Duration
        self.Duration = QtWidgets.QLineEdit(self.centralwidget)
        self.Duration.setGeometry(QtCore.QRect(2380, 110, 200, 22))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Duration.setFont(font)
        self.Duration.setObjectName("Sample")
        self.Duration.setReadOnly(True)
        reg6 = QtCore.QRegExp("^((0\.\d{1,3})|([1-9]\d*(\.\d{1,3})?))(,\s*((0\.\d{1,3})|([1-9]\d*(\.\d{1,3})?)))*$")
        validator6 = QtGui.QRegExpValidator(reg6)
        validator6.setRegExp(reg6)
        self.Duration.setValidator(validator6)
        self.Duration.setPlaceholderText("Up to 3 deci")
        
        # Input 8 Label
        self.Durationlabel = QtWidgets.QLabel(self.centralwidget)
        self.Durationlabel.setGeometry(QtCore.QRect(2200, 110, 170, 22))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Durationlabel.setFont(font)
        self.Durationlabel.setAlignment(QtCore.Qt.AlignCenter)
        self.Durationlabel.setObjectName("Durationlabel")

        # Mode Selection
        self.custom = QtWidgets.QCheckBox(self.centralwidget)
        self.custom.setGeometry(QtCore.QRect(2250, 150, 170, 22)) # 1990, 150, 200, 22
        font = QtGui.QFont()
        font.setPointSize(12)
        self.custom.setFont(font)
        self.custom.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.custom.setObjectName("custom")
        
        self.auto = QtWidgets.QCheckBox(self.centralwidget)
        self.auto.setGeometry(QtCore.QRect(2380, 150, 170, 22))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.auto.setFont(font)
        self.auto.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.auto.setObjectName("auto")

        self.scanning = QtWidgets.QCheckBox(self.centralwidget)
        self.scanning.setGeometry(QtCore.QRect(2430, 300, 170, 22)) # 1990, 150, 200, 22
        font = QtGui.QFont()
        font.setPointSize(12)
        self.scanning.setFont(font)
        self.scanning.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.scanning.setObjectName("scanning")

        self.selecting = QtWidgets.QCheckBox(self.centralwidget)
        self.selecting.setGeometry(QtCore.QRect(2430, 400, 170, 22)) # 1990, 150, 200, 22
        font = QtGui.QFont()
        font.setPointSize(12)
        self.selecting.setFont(font)
        self.selecting.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.selecting.setObjectName("selecting")
        # Plot Widgets

        # label: Box for plot A vs Q
        self.label_24 = QtWidgets.QLabel(self.centralwidget)
        self.label_24.setGeometry(QtCore.QRect(10, 230, 1001, 431))
        self.label_24.setFrameShape(QtWidgets.QFrame.Box)
        self.label_24.setFrameShadow(QtWidgets.QFrame.Plain)
        self.label_24.setStyleSheet("background-color: White")
        self.label_24.setObjectName("label_24")
        self.label_24.lower()
        
        # Wiget: A vs Q
        self.A_vs_Q = pg.PlotWidget(self.centralwidget)
        self.A_vs_Q.setGeometry(QtCore.QRect(11, 231, 999, 429))
        self.A_vs_Q.setFont(font)
        self.A_vs_Q.setBackground("w")
        self.A_vs_Q.plotItem.setLabel("bottom",text="V")
        self.A_vs_Q.plotItem.setLabel("left",text="U")
        #self.A_vs_Q.setMouseEnabled(x=False, y=False)
        self.A_vs_Q.addLegend()
        self.A_vs_Q.showGrid(x=True, y=True)
        self.A_vs_Q.setObjectName("A vs Q")
        self.pen1 = pg.mkPen(color=(255, 0, 0), width=3)
        self.pen2 = pg.mkPen(color=(0, 0, 255), width=3)
        self.pen3 = pg.mkPen(color='k', width=3)
        self.pen4 = pg.mkPen(color='g', width=3)
        self.t = SD()
        self.tx0, self.ty0 = self.t.diagram_data_uv(omega=int(self.lineEdit.text()), m=229, e=1)
        self.tx1, self.ty1 = self.t.diagram_data_uv(omega=int(self.lineEdit.text()), m=229, e=3)
        self.tx2, self.ty2 = self.t.diagram_data_uv(omega=int(self.lineEdit.text()), m=228, e=3)
        self.tx3, self.ty3 = self.t.diagram_data_uv(omega=int(self.lineEdit.text()), m=233, e=1)
        self.A_vs_Q.getPlotItem().plot(
            self.tx0,
            self.ty0,
            name=r'Th-229(I)',
            pen=self.pen1)
        self.A_vs_Q.getPlotItem().plot(
            self.tx1,
            self.ty1,
            name=r'Th-229(III)',
            pen=self.pen2)
        self.A_vs_Q.getPlotItem().plot(
            self.tx2,
            self.ty2,
            name=r'Th-228(III)',
            pen=self.pen3)
        self.A_vs_Q.getPlotItem().plot(
            self.tx3,
            self.ty3,
            name=r'Th-233(I)',
            pen=self.pen4)
        
        # label: Box for plot Count vs t
        self.label_25 = QtWidgets.QLabel(self.centralwidget)
        self.label_25.setGeometry(QtCore.QRect(10, 690, 1001, 451))
        self.label_25.setFrameShape(QtWidgets.QFrame.Box)
        self.label_25.setFrameShadow(QtWidgets.QFrame.Plain)
        self.label_25.setStyleSheet("background-color: White")
        self.label_25.setObjectName("label_25")
        self.label_25.lower()
        
        # Wiget: Count vs t
        self.Count_vs_t = pg.PlotWidget(self.centralwidget)
        self.Count_vs_t.setGeometry(QtCore.QRect(11, 691, 999, 449))
        self.Count_vs_t.setFont(font)
        self.Count_vs_t.setBackground("w")
        self.Count_vs_t.plotItem.setLabel("bottom",text="Time (s)")
        self.Count_vs_t.plotItem.setLabel("left",text="Counts")
        #self.Count_vs_t.setMouseEnabled(x=False, y=False)
        self.Count_vs_t.addLegend()
        self.Count_vs_t.showGrid(x=True, y=True)
        self.Count_vs_t.setObjectName("Count vs t")
        
        # label: Box for plot A vs t
        self.label_26 = QtWidgets.QLabel(self.centralwidget)
        self.label_26.setGeometry(QtCore.QRect(1020, 230, 1021, 431))
        self.label_26.setFrameShape(QtWidgets.QFrame.Box)
        self.label_26.setFrameShadow(QtWidgets.QFrame.Plain)
        self.label_26.setStyleSheet("background-color: White")
        self.label_26.setObjectName("label_26")
        self.label_26.lower()
        
        # Wiget: Count vs AMU
        self.Count_vs_AMU = pg.PlotWidget(self.centralwidget)
        self.Count_vs_AMU.setGeometry(QtCore.QRect(1021, 231, 1019, 429))
        self.Count_vs_AMU.setFont(font)
        self.Count_vs_AMU.setBackground("w")
        self.Count_vs_AMU.plotItem.setLabel("bottom",text="Atomic Mass over Charge (amu/e)")
        self.Count_vs_AMU.plotItem.setLabel("left",text="Counts")
        #self.Count_vs_AMU.setMouseEnabled(x=False, y=False)
        self.Count_vs_AMU.addLegend()
        self.Count_vs_AMU.showGrid(x=True, y=True)
        self.Count_vs_AMU.setObjectName("Count vs AMU")
        
        # label: Box for plot Counter Histogram
        self.label_27 = QtWidgets.QLabel(self.centralwidget)
        self.label_27.setGeometry(QtCore.QRect(1020, 690, 1021, 451))
        self.label_27.setFrameShape(QtWidgets.QFrame.Box)
        self.label_27.setFrameShadow(QtWidgets.QFrame.Plain)
        self.label_27.setStyleSheet("background-color: White")
        self.label_27.setObjectName("label_27")
        self.label_27.lower()
        
        # Wiget: Counter Histogram
        self.Counter_Histogram = pg.PlotWidget(self.centralwidget)
        self.Counter_Histogram.setGeometry(QtCore.QRect(1021, 691, 1019, 449))
        self.Counter_Histogram.setFont(font)
        self.Counter_Histogram.setBackground("w")
        self.Counter_Histogram.plotItem.setLabel("bottom",text="Time After Pulse (ms)")
        self.Counter_Histogram.plotItem.setLabel("left",text="Counts")
        #self.Counter_Histogram.setMouseEnabled(x=False, y=False)
        self.Counter_Histogram.addLegend()
        self.Counter_Histogram.showGrid(x=True, y=True)
        self.Counter_Histogram.setObjectName("Counter Histogram")
        
        # Text Output: message window
        self.messagewindow = QtWidgets.QTextEdit(self.centralwidget)
        self.messagewindow.setGeometry(QtCore.QRect(2050, 230, 361, 429))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.messagewindow.setFont(font)
        self.messagewindow.setObjectName("messagewindow")
        self.messagewindow.setReadOnly(True)

        # Text Output: Markdown window
        self.mkdwindow = QtWidgets.QTextEdit(self.centralwidget)
        self.mkdwindow.setGeometry(QtCore.QRect(2050, 691, 361, 449))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(20)
        self.mkdwindow.setFont(font)
        self.mkdwindow.setPlaceholderText(r'Click " Save Note" to Leave a Marker on Curves')
        self.mkdwindow.setObjectName("mkdwindow")
        self.mkdwindow.setReadOnly(False)

        # Button: Markdown Saving
        self.mkd_save = QtWidgets.QPushButton(self.centralwidget)
        self.mkd_save.setGeometry(QtCore.QRect(2150, 1150, 150, 20))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.mkd_save.setFont(font)
        self.mkd_save.setObjectName("mkd_save")

        # Label: Markdown Notes:
        self.mkd = QtWidgets.QLabel(self.centralwidget)
        self.mkd.setGeometry(QtCore.QRect(2050, 670, 121, 16))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.mkd.setFont(font)
        self.mkd.setAlignment(QtCore.Qt.AlignCenter)
        self.mkd.setObjectName("mkd")

        # label: A vs Q
        self.label_28 = QtWidgets.QLabel(self.centralwidget)
        self.label_28.setGeometry(QtCore.QRect(10, 210, 41, 16))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.label_28.setFont(font)
        self.label_28.setAlignment(QtCore.Qt.AlignCenter)
        self.label_28.setObjectName("label_28")
        
        # label: Message Window
        self.label_29 = QtWidgets.QLabel(self.centralwidget)
        self.label_29.setGeometry(QtCore.QRect(2050, 210, 121, 16))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.label_29.setFont(font)
        self.label_29.setAlignment(QtCore.Qt.AlignCenter)
        self.label_29.setObjectName("label_29")
        
        #label: Count vs AMU
        self.label_30 = QtWidgets.QLabel(self.centralwidget)
        self.label_30.setGeometry(QtCore.QRect(1020, 210, 80, 16))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.label_30.setFont(font)
        self.label_30.setAlignment(QtCore.Qt.AlignCenter)
        self.label_30.setObjectName("label_30")
        
        # label: Counter Histogram
        self.label_31 = QtWidgets.QLabel(self.centralwidget)
        self.label_31.setGeometry(QtCore.QRect(1020, 670, 101, 16))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.label_31.setFont(font)
        self.label_31.setAlignment(QtCore.Qt.AlignCenter)
        self.label_31.setObjectName("label_31")
        
        # label: Count vs t
        self.label_32 = QtWidgets.QLabel(self.centralwidget)
        self.label_32.setGeometry(QtCore.QRect(10, 670, 81, 16))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        self.label_32.setFont(font)
        self.label_32.setObjectName("label_32")

        # label: Counter Latest Value label
        self.label_33 = QtWidgets.QLabel(self.centralwidget)
        self.label_33.setGeometry(QtCore.QRect(20, 1150, 200, 20))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(20)
        self.label_33.setFont(font)
        self.label_33.setAlignment(QtCore.Qt.AlignCenter)
        self.label_33.setObjectName("label_33")

        # label: Counter Latest Value
        self.label_34 = QtWidgets.QLabel(self.centralwidget)
        self.label_34.setGeometry(QtCore.QRect(250, 1150, 200, 20))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(20)
        self.label_34.setFont(font)
        self.label_34.setAlignment(QtCore.Qt.AlignCenter)
        self.label_34.setObjectName("label_34")

        # label: Counter Mean Value label
        self.label_35 = QtWidgets.QLabel(self.centralwidget)
        self.label_35.setGeometry(QtCore.QRect(480, 1150, 200, 20))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(20)
        self.label_35.setFont(font)
        self.label_35.setAlignment(QtCore.Qt.AlignCenter)
        self.label_35.setObjectName("label_35")

        # label: Counter Mean Value
        self.label_36 = QtWidgets.QLabel(self.centralwidget)
        self.label_36.setGeometry(QtCore.QRect(710, 1150, 200, 20))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(20)
        self.label_36.setFont(font)
        self.label_36.setAlignment(QtCore.Qt.AlignCenter)
        self.label_36.setObjectName("label_36")

        # label: Lowest mass over charge ratio label
        self.label_39 = QtWidgets.QLabel(self.centralwidget)
        self.label_39.setGeometry(QtCore.QRect(940, 1150, 250, 20))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(20)
        self.label_39.setFont(font)
        self.label_39.setAlignment(QtCore.Qt.AlignCenter)
        self.label_39.setObjectName("label_39")

        # label: Lowest mass over charge ratio
        self.label_40 = QtWidgets.QLabel(self.centralwidget)
        self.label_40.setGeometry(QtCore.QRect(1220, 1150, 200, 20))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(20)
        self.label_40.setFont(font)
        self.label_40.setAlignment(QtCore.Qt.AlignCenter)
        self.label_40.setObjectName("label_40")
        
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1450, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.lineEdit.setReadOnly(True)
        self.lineEdit_2.setReadOnly(True)
        self.lineEdit_3.setReadOnly(True)
        self.lineEdit_4.setReadOnly(True)
        self.auto.setEnabled(False)
        self.custom.setEnabled(False)
        self.pushButton_2.setEnabled(False)
        
        self.custom.stateChanged.connect(self.mode_select)
        self.auto.stateChanged.connect(self.mode_select)
        self.scanning.stateChanged.connect(self.work_select)
        self.selecting.stateChanged.connect(self.work_select)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Detection Control Panel"))
        self.label.setText(_translate("MainWindow", "Communication Settings"))
        self.label_3.setText(_translate("MainWindow", "Port"))
        self.label_4.setText(_translate("MainWindow", "Baud Rate"))
        self.sendbot.setItemText(0, _translate("MainWindow", "9600"))
        self.sendbot.setItemText(1, _translate("MainWindow", "15200"))
        self.sendbutton.setText(_translate("MainWindow", "Connect"))
        self.label_5.setText(_translate("MainWindow", "Parameter Settings"))
        self.label_7.setText(_translate("MainWindow", "RF Frequency:"))
        self.label_8.setText(_translate("MainWindow", "kHz"))
        self.label_9.setText(_translate("MainWindow", "Inscribed Radius:"))
        self.label_10.setText(_translate("MainWindow", "mm"))
        self.lineEdit_2.setText(_translate("MainWindow", "6"))
        self.lineEdit_2.setPlaceholderText(_translate("MainWindow", "6"))
        self.label_11.setText(_translate("MainWindow", "Ion Mass:"))
        self.label_12.setText(_translate("MainWindow", "AU"))
        self.label_13.setText(_translate("MainWindow", "Ion Charges:"))
        self.label_14.setText(_translate("MainWindow", "e"))
        self.label_15.setText(_translate("MainWindow", "Data Output Control"))
        self.pushButton_2.setText(_translate("MainWindow", "Data Analysis"))
        self.label_17.setText(_translate("MainWindow", "Voltage Output Control"))
        self.comboBox_3.setItemText(0, _translate("MainWindow", "CH0"))
        self.comboBox_3.setItemText(1, _translate("MainWindow", "CH1"))
        self.comboBox_3.setItemText(2, _translate("MainWindow", "CH2"))
        self.comboBox_3.setItemText(3, _translate("MainWindow", "CH3"))
        self.comboBox_4.setItemText(0, _translate("MainWindow", "CH4"))
        self.comboBox_4.setItemText(1, _translate("MainWindow", "CH5"))
        self.comboBox_4.setItemText(2, _translate("MainWindow", "CH6"))
        self.comboBox_4.setItemText(3, _translate("MainWindow", "CH7"))
        self.comboBox_5.setItemText(0, _translate("MainWindow", "CH1"))
        self.comboBox_5.setItemText(1, _translate("MainWindow", "CH2"))
        self.comboBox_5.setItemText(2, _translate("MainWindow", "CH3"))
        self.label_19.setText(_translate("MainWindow", "Positive DC:"))
        self.label_20.setText(_translate("MainWindow", "Negative DC:"))
        self.label_21.setText(_translate("MainWindow", "RF Channel:"))
        self.label_22.setText(_translate("MainWindow", "Configuration Control"))
        self.pushButton_3.setText(_translate("MainWindow", "Play"))
        self.pushButton_4.setText(_translate("MainWindow", "Clear"))
        self.label_28.setText(_translate("MainWindow", "A vs Q"))
        self.label_29.setText(_translate("MainWindow", "Message Window"))
        self.label_30.setText(_translate("MainWindow", "Count vs AMU"))
        self.label_31.setText(_translate("MainWindow", "Counter Histogram"))
        self.label_32.setText(_translate("MainWindow", "Count vs t"))
        self.label_33.setText(_translate("MainWindow", "Counter Latest Value: "))
        self.label_34.setText(_translate("MainWindow", "0"))
        self.label_35.setText(_translate("MainWindow", "Counter Mean Value: "))
        self.label_36.setText(_translate("MainWindow", "0"))
        self.label_38.setText(_translate("MainWindow", "Scanning Features"))
        self.label_39.setText(_translate("MainWindow", "Lowest Mass over charge ratio: "))

        self.Aminputlabel.setText(_translate("MainWindow", "Start Amplitude (V):"))
        self.AMinputlabel.setText(_translate("MainWindow", "End Amplitude (V):"))
        self.Qminputlabel.setText(_translate("MainWindow", "Start DC Voltage (V):"))
        self.QMinputlabel.setText(_translate("MainWindow", "End DC Voltage (V):"))
        self.Asteplabel.setText(_translate("MainWindow", "RF Step (V):"))
        self.Hsteplabel.setText(_translate("MainWindow", "DC Step (V):"))
        self.Samplelabel.setText(_translate("MainWindow", "Number of Samples:"))
        self.Durationlabel.setText(_translate("MainWindow", "Duration (s):"))
        self.mkd.setText(_translate("MainWindow", "Markdown Notes"))
        self.mkd_save.setText(_translate("MainWindow", "Save Note to Data"))

        self.custom.setText(_translate("MainWindow", "Custom Mode"))
        self.auto.setText(_translate("MainWindow", "Auto Mode"))
        self.selecting.setText(_translate("MainWindow", "Selecting Mode"))
        self.scanning.setText(_translate("MainWindow", "Scanning Mode"))

    def enable_parameter(self):
        self.sendcom.setEnabled(True)
        self.sendbot.setEnabled(True)
        #self.sendbutton.setText("Connect")
        self.sendbutton.setToolTip('Click to Open Port')
        self.pushButton_3.setEnabled(True)
        self.pushButton_4.setEnabled(False)
        self.comboBox_3.setEnabled(True)
        self.comboBox_4.setEnabled(True)
        self.comboBox_5.setEnabled(True)
        self.lineEdit.setReadOnly(False)
        self.lineEdit_2.setReadOnly(False)
        self.lineEdit_3.setReadOnly(False)
        self.lineEdit_4.setReadOnly(False)
        
    def disable_parameter(self):
        self.sendcom.setEnabled(False)
        self.sendbot.setEnabled(False)
        #self.sendbutton.setText("Connect")
        self.sendbutton.setToolTip('Click to Open Port')
        self.pushButton_3.setEnabled(True)
        self.pushButton_4.setEnabled(True)
        self.comboBox_3.setEnabled(False)
        self.comboBox_4.setEnabled(False)
        self.comboBox_5.setEnabled(False)
        #self.lineEdit.setReadOnly(True)
        #self.lineEdit_2.setReadOnly(True)
        #self.lineEdit_3.setReadOnly(True)
        #self.lineEdit_4.setReadOnly(True)
        self.Aminputdata.setReadOnly(True)
        self.AMinputdata.setReadOnly(True)
        self.Qminputdata.setReadOnly(True)
        self.QMinputdata.setReadOnly(True)
        self.Duration.setReadOnly(True)
        self.Astep.setReadOnly(True)
        self.Hstep.setReadOnly(True)
        self.Sample.setReadOnly(True)

    def mode_select(self, state):
        # If either check box is checked, disable the other
        if state == Qt.Checked:
            if self.sender() == self.custom:
                self.auto.setChecked(False)
                self.Aminputdata.setReadOnly(False)
                self.AMinputdata.setReadOnly(False)
                self.Qminputdata.setReadOnly(False)
                self.QMinputdata.setReadOnly(False)
                self.Duration.setReadOnly(False)
                self.Astep.setReadOnly(False)
                self.Hstep.setReadOnly(False)
                self.Sample.setReadOnly(True)
            
            if self.sender() == self.auto:
                self.custom.setChecked(False)
                self.Aminputdata.setReadOnly(False)
                self.AMinputdata.setReadOnly(False)
                self.Qminputdata.setReadOnly(False)
                self.QMinputdata.setReadOnly(False)
                self.Sample.setReadOnly(False)
                self.Duration.setReadOnly(False)
                self.Astep.setReadOnly(True)
                self.Hstep.setReadOnly(True)
        else:
            self.Aminputdata.setReadOnly(True)
            self.AMinputdata.setReadOnly(True)
            self.Qminputdata.setReadOnly(True)
            self.QMinputdata.setReadOnly(True)
            self.Duration.setReadOnly(True)
            self.Astep.setReadOnly(True)
            self.Hstep.setReadOnly(True)
            self.Sample.setReadOnly(True)

    def work_select(self, state):
        # If either check box is checked, disable the other
        if state == Qt.Checked:
            if self.sender() == self.scanning:
                self.selecting.setChecked(False)
                self.auto.setEnabled(True)
                self.custom.setEnabled(True)
                self.scanning_mode()

            if self.sender() == self.selecting:
                self.scanning.setChecked(False)
                self.auto.setEnabled(False)
                self.custom.setEnabled(False)
                self.selecting_mode()
        else:
            self.auto.setEnabled(False)
            self.custom.setEnabled(False)

    def scanning_mode(self):
        self.lineEdit.setReadOnly(True)
        self.lineEdit_2.setReadOnly(True)
        self.lineEdit_3.setReadOnly(True)
        self.lineEdit_4.setReadOnly(True)
        self.Aminputdata.setReadOnly(True)
        self.AMinputdata.setReadOnly(True)
        self.Qminputdata.setReadOnly(True)
        self.QMinputdata.setReadOnly(True)
        self.Duration.setReadOnly(True)
        self.Astep.setReadOnly(True)
        self.Hstep.setReadOnly(True)
        self.Sample.setReadOnly(True)

    def selecting_mode(self):
        self.Aminputdata.setReadOnly(True)
        self.AMinputdata.setReadOnly(True)
        self.Qminputdata.setReadOnly(True)
        self.QMinputdata.setReadOnly(True)
        self.Duration.setReadOnly(True)
        self.Astep.setReadOnly(True)
        self.Hstep.setReadOnly(True)
        self.Sample.setReadOnly(True)
        self.lineEdit.setReadOnly(False)
        self.lineEdit_2.setReadOnly(False)
        self.lineEdit_3.setReadOnly(False)
        self.lineEdit_4.setReadOnly(False)

